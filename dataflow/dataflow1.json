{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "MapDrifted1",
					"description": "Creates an explicit mapping for each drifted column"
				},
				{
					"name": "filter1"
				}
			],
			"script": "source(output(\n\t\t{_col0_} as date,\n\t\t{_col1_} as string,\n\t\t{_col2_} as string,\n\t\t{_col3_} as string,\n\t\t{_col4_} as string,\n\t\t{_col5_} as string,\n\t\t{_col6_} as string,\n\t\t{_col7_} as string,\n\t\t{_col8_} as string,\n\t\t{_col9_} as string,\n\t\t{_col10_} as string,\n\t\t{_col11_} as string,\n\t\t{_col12_} as string,\n\t\t{_col13_} as string,\n\t\t{_col14_} as string,\n\t\t{_col15_} as string,\n\t\t{_col16_} as short\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpartitionBy('hash', 1)) ~> source1\nsource1 derive({_col0_} = toDate(byName('_col0_')),\n\t\t{_col1_} = toString(byName('_col1_')),\n\t\t{_col2_} = toString(byName('_col2_')),\n\t\t{_col3_} = toString(byName('_col3_')),\n\t\t{_col4_} = toString(byName('_col4_')),\n\t\t{_col5_} = toString(byName('_col5_')),\n\t\t{_col6_} = toString(byName('_col6_')),\n\t\t{_col7_} = toString(byName('_col7_')),\n\t\t{_col8_} = toString(byName('_col8_')),\n\t\t{_col9_} = toString(byName('_col9_')),\n\t\t{_col10_} = toString(byName('_col10_')),\n\t\t{_col11_} = toString(byName('_col11_')),\n\t\t{_col12_} = toString(byName('_col12_')),\n\t\t{_col13_} = toString(byName('_col13_')),\n\t\t{_col14_} = add(add(toString(byName('_col14_')),'|'),toString(byName('_col15_'))),\n\t\t{_col15_} = toString(byName('_col15_')),\n\t\t{_col16_} = toShort(byName('_col16_'))) ~> MapDrifted1\nMapDrifted1 filter({_col2_}=='INF') ~> filter1\nfilter1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}